{"version":3,"sources":["utils/genID.js","components/InputField/Button/Button.js","components/InputField/CustomInput/CustomInput.js","components/InputField/InputField.js","components/Watcher/WatchField/Watch/Watch.js","utils/initLocalClocks.js","components/Watcher/WatchField/WatchAnalog/WatchAnalog.js","components/Watcher/WatchField/WatchField.js","components/Watcher/Watcher.js","App.js","reportWebVitals.js","index.js"],"names":["genID","concat","Date","now","Math","random","Button","props","_jsx","className","children","type","text","CustomInput","item","onChangeHandler","inputName","inputLabel","inputType","placeholder","_jsxs","htmlFor","id","name","onChange","InputField","onSubmitHandler","inputData","btnText","onSubmit","map","moment","Watch","_ref","onClickHandler","_useState","useState","utcOffset","Number","parseInt","timeZone","format","_useState2","_slicedToArray","time","setTime","useEffect","timerID","setTimeout","clearTimeout","onClick","initLocalClocks","date","seconds","getSeconds","minutes","getMinutes","hours","getUTCHours","WatchAnalog","style","transform","WebkitTransform","WatchField","watch","_Fragment","WATCH_INITIAL_STATE","Watcher","setWatch","event","_event$target","target","value","preventDefault","_event$target2","prevWatch","_toConsumableArray","removeId","dataset","newWatch","filter","el","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d99aed8.chunk.js","sourcesContent":["export default function genID() {\n  return `${Date.now()}-${Math.random()}`;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button(props) {\n  return (\n    <div className='Button'>\n      <button type='submit' className='btn'>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {};\n\nexport default Button;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CustomInput(props) {\n  const { item, onChangeHandler } = props;\n  const { inputName, inputLabel, inputType, placeholder } = item;\n  return (\n    <div className='CustomInput'>\n      <label htmlFor={inputName} className='CustomInput__label'>\n        {inputLabel}\n      </label>\n      <input\n        className='CustomInput__text'\n        id={inputName}\n        name={inputName}\n        type={inputType}\n        placeholder={placeholder}\n        onChange={onChangeHandler}\n      />\n    </div>\n  );\n}\n\nCustomInput.propTypes = {};\n\nexport default CustomInput;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button/Button';\nimport CustomInput from './CustomInput/CustomInput';\n\nfunction InputField(props) {\n  const { onChangeHandler, onSubmitHandler, inputData, btnText } = props;\n  return (\n    <form className='InputField' onSubmit={onSubmitHandler}>\n      {inputData.map((item) => (\n        <CustomInput\n          key={item.id}\n          item={item}\n          onChangeHandler={onChangeHandler}\n        />\n      ))}\n      <Button text={btnText} />\n    </form>\n  );\n}\n\nInputField.propTypes = {};\n\nexport default InputField;\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as moment from 'moment';\nimport 'moment/locale/ru';\nmoment.locale('ru');\n\nfunction Watch({ onClickHandler, item }) {\n  const [time, setTime] = useState(\n    moment().utcOffset(Number.parseInt(item.timeZone)).format('LTS')\n  );\n\n  useEffect(() => {\n    const timerID = setTimeout(() => {\n      setTime(moment().utcOffset(Number.parseInt(item.timeZone)).format('LTS'));\n    }, 1000);\n    return () => {\n      clearTimeout(timerID);\n    };\n  });\n\n  return (\n    <li className='Watch'>\n      <span className='Watch_delete' onClick={onClickHandler} data-id={item.id}>\n        &#x2715;\n      </span>\n      <span className='Watch_name'>{item.name}</span>\n      <span className='Watch_time'>{time}</span>\n    </li>\n  );\n}\n\nWatch.propTypes = {};\n\nexport default Watch;\n","export default function initLocalClocks(timeZone) {\n  const date = new Date();\n  const seconds = date.getSeconds();\n  const minutes = date.getMinutes();\n  const hours = date.getUTCHours() + Number.parseInt(timeZone / 60);\n\n  const hands = {\n    hours: hours * 30 + minutes / 2,\n    minutes: minutes * 6,\n    seconds: seconds * 6,\n  };\n\n  return hands;\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport initLocalClocks from '../../../../utils/initLocalClocks';\n\nfunction WatchAnalog({ onClickHandler, item }) {\n  const [time, setTime] = useState(initLocalClocks(item.timeZone));\n\n  useEffect(() => {\n    const timerID = setTimeout(() => {\n      setTime(initLocalClocks(item.timeZone));\n    }, 1000);\n    return () => {\n      clearTimeout(timerID);\n    };\n  });\n\n  return (\n    <li className='clock'>\n      <span className='Watch_delete' onClick={onClickHandler} data-id={item.id}>\n        &#x2715;\n      </span>\n      <span className='Watch_name'>{item.name}</span>\n      <div className='hours-container'>\n        <div\n          className='hours'\n          style={{\n            transform: `rotateZ(${time.hours}deg)`,\n            WebkitTransform: `rotateZ(${time.hours}deg)`,\n          }}\n        ></div>\n      </div>\n      <div className='minutes-container'>\n        <div\n          className='minutes'\n          style={{\n            transform: `rotateZ(${time.minutes}deg)`,\n            WebkitTransform: `rotateZ(${time.minutes}deg)`,\n          }}\n        ></div>\n      </div>\n      <div className='seconds-container'>\n        <div\n          className='seconds'\n          style={{\n            transform: `rotateZ(${time.seconds}deg)`,\n            WebkitTransform: `rotateZ(${time.seconds}deg)`,\n          }}\n        ></div>\n      </div>\n    </li>\n  );\n}\n\nWatchAnalog.propTypes = {};\n\nexport default WatchAnalog;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Watch from './Watch/Watch';\nimport WatchAnalog from './WatchAnalog/WatchAnalog';\n\nfunction WatchField(props) {\n  const { watch, onClickHandler } = props;\n  return (\n    <>\n      <ul className='WatchField'>\n        {watch.map((item) => (\n          <Watch key={item.id} item={item} onClickHandler={onClickHandler} />\n        ))}\n      </ul>\n      <ul className='WatchField'>\n        {watch.map((item) => (\n          <WatchAnalog\n            key={item.id}\n            item={item}\n            onClickHandler={onClickHandler}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nWatchField.propTypes = {};\n\nexport default WatchField;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport genID from '../../utils/genID';\nimport InputField from '../InputField/InputField';\nimport WatchField from './WatchField/WatchField';\nimport * as moment from 'moment';\nimport 'moment/locale/ru';\nmoment.locale('ru');\n\nconst WATCH_INITIAL_STATE = [\n  { name: 'Местное время', timeZone: moment().utcOffset(), id: '0' },\n  {\n    name: 'Берлин, Германия',\n    timeZone: +120,\n    id: '1',\n  },\n  { name: 'Абу-Даби, ОАЭ', timeZone: +240, id: '2' },\n];\n\nfunction Watcher() {\n  const [watch, setWatch] = useState(WATCH_INITIAL_STATE);\n\n  const inputData = [\n    {\n      inputName: 'name',\n      inputLabel: 'Название',\n      inputType: 'text',\n      placeholder: 'Введите город',\n      id: genID(),\n    },\n    {\n      inputName: 'timeZone',\n      inputLabel: 'Временная зона',\n      inputType: 'number',\n      placeholder: 'GMT',\n      id: genID(),\n    },\n  ];\n  const btnText = 'Добавить';\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.target;\n    // validation logic should be here?\n    // console.log({ name, value });\n    // setWatch((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const { name, timeZone } = event.target;\n    setWatch((prevWatch) => [\n      ...prevWatch,\n      {\n        name: name.value,\n        timeZone: timeZone.value * 60,\n        id: genID(),\n      },\n    ]);\n  };\n\n  const onClickHandler = (event) => {\n    const removeId = event.target.dataset.id;\n    const newWatch = watch.filter((el) => el.id !== removeId);\n    setWatch(newWatch);\n  };\n\n  return (\n    <div className='Watcher'>\n      <InputField\n        inputData={inputData}\n        btnText={btnText}\n        onChangeHandler={onChangeHandler}\n        onSubmitHandler={onSubmitHandler}\n      />\n      <WatchField watch={watch} onClickHandler={onClickHandler} />\n    </div>\n  );\n}\n\nWatcher.propTypes = {};\n\nexport default Watcher;\n","import './App.css';\nimport Watcher from './components/Watcher/Watcher';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Watcher />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}